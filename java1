ouput control symbol
%d（int,long int,short,byte)
d是10进制
%x,%#x,%X,%#X,(int,long int)
大小写控制大小写，x是16进制，#前面加ox，
%c（char）
%f（float，double）
%s（string）
十进制（12），16进制（Ox12），八进制（012）
int 的数太大，再最后加L
把一个数字变成float，后面加f
byte 1 个字节；short 2个字节；int 4个字节；long 八个字节；float 四个字节，double 八个字节；char 两个字节；bollean 1个字节
字节转换只可以从低到高（强制转换）加括号，强制转换本身的value没有变化
java的运行内存（分别是静态的,栈式的,和堆式的）
静态存储分配是指在编译时就能确定每个数据目标在运行时刻的存储空间需求,因而在编译时就可以给他们分配固定的内存空间.
这种分配策略要求程序代码中不允许有可变数据结构(比如可变数组)的存在,也不允许有嵌套或者递归的结构出现,
因为它们都会导致编译程序无法计算准确的存储空间需求. 
栈式存储分配也可称为动态存储分配,是由一个类似于堆栈的运行栈来实现的.和静态存储分配相反,在栈式存储方案中,
程序对数据区的需求在编译时是完全未知的,只有到运行的时候才能够知道,但是规
定在运行中进入一个程序模块时,必须知道该程序模块所需的数据区大小才能够为其分配内存.
和我们在数据结构所熟知的栈一样,栈式存储分配按照先进后出的原则进行分配。
从堆和栈（stack）的功能和作用来通俗的比较,堆主要用来存放对象的，（推（heap）里的东西要手动释放，可以跨区域释放）
内存管理（heap，stack，code and data segment）
1111
